void transmittance(){

  int i = 0;
  for(i = 10 ; i < 50 ; i++){
    if(i == 11 || i == 15 || i == 23 || i == 31 || i == 33 || i == 34 || i == 37 || i == 38 || i == 43 || i == 44){

      string i_str = to_string(i);
      string front = "J";
      string back_before = "_before";
      string back_irr = "_irr";

      string filename_before = front + i_str + back_before;
      string filename_irr = front + i_str + back_irr;

      string filler = "../";
      string filler2 = ".csv";

      ifstream myfile_before;
      ifstream myfile_irr;
      string file_before = filler + filename_before + filler2;
      string file_irr = filler + filename_irr + filler2;

      const int n = 1151;
      const double d = 20;//crystal length 20cm
      string dummy1, dummy2, dummy3, dummy4;//read out first two rows
      string comma;
      double space1, space2;
      double wavelength_before[n]; 
      double transmittance_before[n];
      double wavelength_irr[n]; 
      double transmittance_irr[n];
      double delta_k[n];

      int j = 0;

      myfile_before.open(file_before);
      myfile_before>>dummy1>>dummy2>>dummy3>>dummy4;//read and discard the first two rows
      myfile_irr.open(file_irr);
      myfile_irr>>dummy1>>dummy2>>dummy3>>dummy4;//read and discard the first two rows

      for (j = 0 ; j < n ; j++){
	myfile_before>>wavelength_before[j]>>transmittance_before[j];
	myfile_irr>>wavelength_irr[j]>>transmittance_irr[j];
	delta_k[j] = (1/d)*log(transmittance_before[j]/transmittance_irr[j]);
      }
      myfile_before.close();
      myfile_irr.close();



      string title_front = front;
      string title_back = ", Transmittance";
      string title = title_front + i_str + title_back;
      TCanvas *c1 = new TCanvas("c1",title.c_str(),200,10,700,500);
      c1->cd();
      c1->SetGrid();
      TGraph *gr_before = new TGraph(n,wavelength_before,transmittance_before);
      //  gr_before->SetLineColor(2);
      // gr_before->SetLineWidth(4);
      gr_before->SetMarkerColor(4);
      //  gr_before->SetMarkerStyle(21);
      gr_before->SetMarkerStyle(1);
      gr_before->SetTitle(title.c_str());
      gr_before->GetXaxis()->SetTitle("Wave Length [nm]");
      gr_before->GetYaxis()->SetTitle("Transmittance [%]");
      //  gr_before->Draw("ACP");
      gr_before->Draw();

      //set the axis range after you Draw() the graph
      gr_before->GetXaxis()->SetRangeUser(325,900);
      gr_before->GetYaxis()->SetRangeUser(0,100);

      TGraph *gr_irr = new TGraph(n,wavelength_irr,transmittance_irr);
      //  gr_irr->SetLineColor(2);
      // gr_irr->SetLineWidth(4);
      gr_irr->SetMarkerColor(kRed);
      //  gr_irr->SetMarkerStyle(21);
      gr_irr->SetMarkerStyle(1);
      gr_irr->Draw("SAME");


      // TCanvas::Update() draws the frame, after which one can change it
      c1->Update();
      c1->GetFrame()->SetBorderSize(12);
      c1->Modified();

      //draw lines to mark light emission range : [400, 800]nm
      TLine *line_start = new TLine(400,0,400,100);//(x1, y1, x2, y2)
      TLine *line_finish = new TLine(800,0,800,100);
      line_start->SetLineColor(2);//red
      line_start->SetLineWidth(2);
      line_start->SetLineStyle(2);//dotted line
      line_finish->SetLineColor(2);//red
      line_finish->SetLineWidth(2);
      line_finish->SetLineStyle(2);//dotted line
      line_start->Draw("");//no need to say "SAME"
      line_finish->Draw("");

      string dir = "output/";
      string png = "_transmittance.png";
      string comb = dir + front + i_str + png;
      const char *output_before = comb.c_str();
      c1->Print(output_before);

      //delta K
      title_back = ", Delta K";
      title = title_front + i_str + title_back;
      TCanvas *c2 = new TCanvas("c2", title.c_str(), 200, 10, 700, 500);
      c2->cd();
      c2->SetGrid();
      TGraph *gr_dk = new TGraph(n,wavelength_before ,delta_k);
      gr_dk->SetMarkerColor(4);
      gr_dk->SetMarkerStyle(1);
      gr_dk->SetTitle(title.c_str());
      gr_dk->GetXaxis()->SetTitle("Wave Length [nm]");
      gr_dk->GetYaxis()->SetTitle("dK [1/cm]");
      gr_dk->Draw();

      //set the axis range after you Draw() the graph
      gr_dk->GetXaxis()->SetRangeUser(325,900);
      gr_dk->GetYaxis()->SetRangeUser(-0.06,0.06);

      // TCanvas::Update() draws the frame, after which one can change it
      c2->Update();
      c2->GetFrame()->SetBorderSize(12);
      c2->Modified();

      //draw lines to mark light emission range : [400, 800]nm
      TLine *line_start2 = new TLine(400,-0.06, 400, 0.06);//(x1, y1, x2, y2)
      TLine *line_finish2 = new TLine(800,-0.06,800, 0.06);
      line_start2->SetLineColor(2);//red
      line_start2->SetLineWidth(2);
      line_start2->SetLineStyle(2);//dotted line
      line_finish2->SetLineColor(2);//red
      line_finish2->SetLineWidth(2);
      line_finish2->SetLineStyle(2);//dotted line
      line_start2->Draw("");//no need to say "SAME"
      line_finish2->Draw("");

      png = "_dK.png";
      comb = dir + front + i_str + png;
      const char *output_irr = comb.c_str();
      c2->Print(output_irr);

      c1->Close();
      c2->Close();

    }
  }
  return 0;
}
